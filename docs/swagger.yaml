openapi: 3.0.3
info:
  title: My API
  version: 1.0.0
  description: This is the API documentation for my project.
paths:
  /auth/api/change-password/:
    post:
      operationId: auth_api_change_password_create
      description: |
        # Allows a logged-in user to change their password.
        - To use this endpoint, you first need to authorize yourself from the top of the Swagger UI page.
        - For validation, we specifically used the validate method in the serializer during the RegisterView process.
      summary: Change Password
      tags:
      - Auth - Password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password changed successfully.
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Old password is incorrect.
          description: ''
        '422':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Password does not meet validation criteria.
          description: ''
  /auth/api/disable-2fa/:
    post:
      operationId: auth_api_disable_2fa_create
      description: Disables two-factor authentication (2FA) for the user after verifying
        the password.
      summary: Disable 2FA
      tags:
      - Auth - OTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disable2FA'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Disable2FA'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Disable2FA'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disable2FA'
          description: ''
  /auth/api/enable-2fa/:
    post:
      operationId: auth_api_enable_2fa_create
      description: Enables two-factor authentication (2FA) for the user using the
        specified method (email or SMS).
      summary: Enable 2FA
      tags:
      - Auth - OTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enable2FA'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Enable2FA'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Enable2FA'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enable2FA'
          description: ''
  /auth/api/forgot-password/:
    post:
      operationId: auth_api_forgot_password_create
      description: |
        # Sends a password reset link to the user's email.
        - First, the email is checked to see if it exists in the database. If it does not, an error is raised.
        - The email format is validated using EmailField.
        - The website URL and the sender's email address are configured in the settings under SITE_URL and DEFAULT_FROM_EMAIL.
      summary: Forgot Password
      tags:
      - Auth - Password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password reset link sent.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User with this email does not exist.
          description: ''
        '422':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid email format.
          description: ''
  /auth/api/generate-otp/:
    post:
      operationId: auth_api_generate_otp_create
      description: Generates a one-time password (OTP) for the user, which is sent
        via the selected method (email or SMS).
      summary: Generate OTP
      tags:
      - Auth - OTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerateOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateOTP'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateOTP'
          description: ''
  /auth/api/logout/:
    post:
      operationId: auth_api_logout_create
      description: |
        # Logs out a user by blacklisting the refresh token.
        - You need to authorize yourself from the Swagger UI before accessing this endpoint.
        - Send the refresh token in the request body; it will be added to the blacklist and invalidated.
        - Note that the access token will remain valid until it expires.
      summary: Logout
      tags:
      - Auth - Logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logout'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully.
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid token.
          description: ''
  /auth/api/profile/:
    get:
      operationId: auth_api_profile_retrieve
      description: |
        # Fetches the profile details of the logged-in user.
        - To use this endpoint, you first need to authorize yourself from the top of the Swagger UI page.
      summary: Get Profile
      tags:
      - Auth - Profile
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: johndoe
                  email:
                    type: string
                    example: johndoe@example.com
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Doe
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Authentication credentials were not provided.
          description: ''
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User account is disabled.
          description: ''
  /auth/api/profile/update/:
    put:
      operationId: auth_api_profile_update_update
      description: '# Updates the profile information of the logged-in user.'
      summary: Update Profile
      tags:
      - Auth - Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Profile updated successfully.
                content:
                  application/json:
                    example:
                      message: Profile updated successfully.
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad request. Validation errors or invalid data provided.
                content:
                  application/json:
                    example:
                      error: Invalid data provided.
                      details:
                        field_name:
                        - error message
          description: ''
        '401':
          content:
            application/json:
              schema:
                description: Unauthorized. Authentication credentials were not provided
                  or are invalid.
                content:
                  application/json:
                    example:
                      error: Authentication credentials were not provided.
          description: ''
    patch:
      operationId: auth_api_profile_update_partial_update
      description: '# Updates the profile information of the logged-in user.'
      summary: Update Profile
      tags:
      - Auth - Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Profile updated successfully.
                content:
                  application/json:
                    example:
                      message: Profile updated successfully.
          description: ''
        '400':
          content:
            application/json:
              schema:
                description: Bad request. Validation errors or invalid data provided.
                content:
                  application/json:
                    example:
                      error: Invalid data provided.
                      details:
                        field_name:
                        - error message
          description: ''
        '401':
          content:
            application/json:
              schema:
                description: Unauthorized. Authentication credentials were not provided
                  or are invalid.
                content:
                  application/json:
                    example:
                      error: Authentication credentials were not provided.
          description: ''
  /auth/api/register/:
    post:
      operationId: auth_api_register_create
      description: |-
        # Registers a new user and sends a verification link.
        - The serializer includes built-in validations to prevent XSS attacks.
        - Email and password fields are validated.
        - Rate limiting is implemented.
        - 'verification_token' and 'token_expiration' fields secure the email verification link.
        - Token is cleared after verification.
      summary: User Registration
      tags:
      - Auth - Registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully. Please verify your email.
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Validation error details.
          description: ''
  /auth/api/resend-email/:
    post:
      operationId: auth_api_resend_email_create
      description: |-
        Resends an email for either verification or password reset.
        - If `email_type` is 'verification', a verification email is resent.
        - If `email_type` is 'reset_password', a password reset email is resent.
      summary: Resend Email
      tags:
      - Auth - Password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmail'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email resent successfully.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found.
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid email type.
          description: ''
  /auth/api/reset-password/:
    post:
      operationId: auth_api_reset_password_create
      description: |
        # Resets the user's password using the provided token and new password.
        - This is used when the user doesn't remember the old password.
        - The token is sent via email with a link.
        - The user provides the new password here.
        - Token expiration and validity are handled by Redis.
      summary: Reset Password
      tags:
      - Auth - Password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password reset successfully.
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Token is required in query parameters.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found with the given token.
          description: ''
  /auth/api/sessions/:
    get:
      operationId: auth_api_sessions_retrieve
      description: Fetches a list of all active sessions for the authenticated user.
      summary: List Active Sessions
      tags:
      - Auth - Session
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /auth/api/sessions/delete/{session_key}/:
    post:
      operationId: auth_api_sessions_delete_create
      description: Deletes a specific session of the authenticated user by session
        key.
      summary: Delete a Specific Session
      parameters:
      - in: path
        name: session_key
        schema:
          type: string
        required: true
      tags:
      - Auth - Session
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /auth/api/sessions/logout-all/:
    post:
      operationId: auth_api_sessions_logout_all_create
      description: Logs out the user from all active sessions.
      summary: Logout from All Sessions
      tags:
      - Auth - Session
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /auth/api/token/:
    post:
      operationId: auth_api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - Auth - Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/api/token/refresh/:
    post:
      operationId: auth_api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - Auth - Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/api/token/verify/:
    post:
      operationId: auth_api_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - Auth - Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /auth/api/verify-email/:
    get:
      operationId: auth_api_verify_email_retrieve
      description: |
        # Activates a user account after email verification.
        - When the user clicks on the link sent to their email, this API is called.
        - The link contains a temporary token that is valid for one hour.
        - Without the temporary token, you cannot access this API.
      summary: Verify Email
      tags:
      - Auth - Registration
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email verified successfully.
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid token.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Token has expired.
          description: ''
  /auth/api/verify-otp/:
    post:
      operationId: auth_api_verify_otp_create
      description: Verifies the one-time password (OTP) entered by the user.
      summary: Verify OTP
      tags:
      - Auth - OTP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOTP'
          description: ''
  /categories/admin/categories/:
    get:
      operationId: categories_admin_categories_list
      description: |-
        Allows admin to list and create categories.
        Requires admin privileges.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Admin - Category
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: categories_admin_categories_create
      description: |-
        Allows admin to list and create categories.
        Requires admin privileges.
      tags:
      - Admin - Category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /categories/admin/categories/{id}/:
    get:
      operationId: categories_admin_categories_retrieve
      description: |-
        Allows admin to retrieve, update or delete a specific category by pk.
        Requires admin privileges.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Category
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categories_admin_categories_update
      description: |-
        Allows admin to retrieve, update or delete a specific category by pk.
        Requires admin privileges.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_admin_categories_partial_update
      description: |-
        Allows admin to retrieve, update or delete a specific category by pk.
        Requires admin privileges.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categories_admin_categories_destroy
      description: |-
        Allows admin to retrieve, update or delete a specific category by pk.
        Requires admin privileges.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Category
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /categories/categories/:
    get:
      operationId: categories_categories_list
      description: |-
        Returns a list of all active categories.
        Only active categories are visible to the end user.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Category - List
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
  /categories/categories/{id}/:
    get:
      operationId: categories_categories_retrieve
      description: Returns the details of a single active category by its primary
        key (pk).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Category - Detail
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /products/{id}/:
    get:
      operationId: products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Product - List
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
  /products/{id}/inventory/:
    get:
      operationId: products_inventory_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Product - Inventory
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductInventoryList'
          description: ''
  /products/{id}/media/:
    get:
      operationId: products_media_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Product - Media
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMediaList'
          description: ''
  /products/admin/attributes/:
    get:
      operationId: products_admin_attributes_list
      summary: List or create product attributes
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Admin - Product Attributes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminProductAttributeList'
          description: ''
    post:
      operationId: products_admin_attributes_create
      summary: List or create product attributes
      tags:
      - Admin - Product Attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductAttribute'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProductAttribute'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProductAttribute'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductAttribute'
          description: ''
  /products/admin/attributes/{attribute_id}/values/:
    get:
      operationId: products_admin_attributes_values_list
      summary: List or create attribute values for a specific product attribute
      parameters:
      - in: path
        name: attribute_id
        schema:
          type: integer
        required: true
      - in: query
        name: attribute_id
        schema:
          type: integer
        description: ID of the product attribute
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Admin - Product Attributes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminProductAttributeValueList'
          description: ''
    post:
      operationId: products_admin_attributes_values_create
      summary: List or create attribute values for a specific product attribute
      parameters:
      - in: path
        name: attribute_id
        schema:
          type: integer
        required: true
      - in: query
        name: attribute_id
        schema:
          type: integer
        description: ID of the product attribute
        required: true
      tags:
      - Admin - Product Attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductAttributeValue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProductAttributeValue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProductAttributeValue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductAttributeValue'
          description: ''
  /products/admin/attributes/{attribute_id}/values/{id}/:
    get:
      operationId: products_admin_attributes_values_retrieve
      summary: View, update, or delete a specific attribute value
      parameters:
      - in: path
        name: attribute_id
        schema:
          type: integer
        required: true
      - in: query
        name: attribute_id
        schema:
          type: integer
        description: ID of the product attribute
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: pk
        schema:
          type: integer
        description: ID of the product attribute value
        required: true
      tags:
      - Admin - Product Attributes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductAttributeValueDetail'
          description: ''
    put:
      operationId: products_admin_attributes_values_update
      summary: View, update, or delete a specific attribute value
      parameters:
      - in: path
        name: attribute_id
        schema:
          type: integer
        required: true
      - in: query
        name: attribute_id
        schema:
          type: integer
        description: ID of the product attribute
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: pk
        schema:
          type: integer
        description: ID of the product attribute value
        required: true
      tags:
      - Admin - Product Attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductAttributeValueDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProductAttributeValueDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProductAttributeValueDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductAttributeValueDetail'
          description: ''
    patch:
      operationId: products_admin_attributes_values_partial_update
      summary: View, update, or delete a specific attribute value
      parameters:
      - in: path
        name: attribute_id
        schema:
          type: integer
        required: true
      - in: query
        name: attribute_id
        schema:
          type: integer
        description: ID of the product attribute
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: pk
        schema:
          type: integer
        description: ID of the product attribute value
        required: true
      tags:
      - Admin - Product Attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductAttributeValueDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductAttributeValueDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductAttributeValueDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductAttributeValueDetail'
          description: ''
    delete:
      operationId: products_admin_attributes_values_destroy
      summary: View, update, or delete a specific attribute value
      parameters:
      - in: path
        name: attribute_id
        schema:
          type: integer
        required: true
      - in: query
        name: attribute_id
        schema:
          type: integer
        description: ID of the product attribute
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: pk
        schema:
          type: integer
        description: ID of the product attribute value
        required: true
      tags:
      - Admin - Product Attributes
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/admin/attributes/{id}/:
    get:
      operationId: products_admin_attributes_retrieve
      summary: View, update, or delete a product attribute
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Attributes
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductAttributeDetail'
          description: ''
    put:
      operationId: products_admin_attributes_update
      summary: View, update, or delete a product attribute
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductAttributeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProductAttributeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProductAttributeDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductAttributeDetail'
          description: ''
    patch:
      operationId: products_admin_attributes_partial_update
      summary: View, update, or delete a product attribute
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductAttributeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductAttributeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductAttributeDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductAttributeDetail'
          description: ''
    delete:
      operationId: products_admin_attributes_destroy
      summary: View, update, or delete a product attribute
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Attributes
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/admin/inventories/:
    get:
      operationId: products_admin_inventories_list
      summary: List or create product inventories
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Admin - Product Inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminProductInventoryList'
          description: ''
    post:
      operationId: products_admin_inventories_create
      summary: List or create product inventories
      tags:
      - Admin - Product Inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductInventory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProductInventory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProductInventory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductInventory'
          description: ''
  /products/admin/inventories/{sku}/:
    get:
      operationId: products_admin_inventories_retrieve
      summary: View, update, or delete a specific product inventory
      parameters:
      - in: path
        name: sku
        schema:
          type: string
        required: true
      tags:
      - Admin - Product Inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductInventoryDetail'
          description: ''
    put:
      operationId: products_admin_inventories_update
      summary: View, update, or delete a specific product inventory
      parameters:
      - in: path
        name: sku
        schema:
          type: string
        required: true
      tags:
      - Admin - Product Inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductInventoryDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProductInventoryDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProductInventoryDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductInventoryDetail'
          description: ''
    patch:
      operationId: products_admin_inventories_partial_update
      summary: View, update, or delete a specific product inventory
      parameters:
      - in: path
        name: sku
        schema:
          type: string
        required: true
      tags:
      - Admin - Product Inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductInventoryDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductInventoryDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductInventoryDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductInventoryDetail'
          description: ''
    delete:
      operationId: products_admin_inventories_destroy
      summary: View, update, or delete a specific product inventory
      parameters:
      - in: path
        name: sku
        schema:
          type: string
        required: true
      tags:
      - Admin - Product Inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/admin/product-types/:
    get:
      operationId: products_admin_product_types_list
      summary: List or create product types
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Admin - Product Types
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminProductTypeList'
          description: ''
    post:
      operationId: products_admin_product_types_create
      summary: List or create product types
      tags:
      - Admin - Product Types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProductType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProductType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductType'
          description: ''
  /products/admin/product-types/{id}/:
    get:
      operationId: products_admin_product_types_retrieve
      summary: View, update, or delete a product type
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Types
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductTypeDetail'
          description: ''
    put:
      operationId: products_admin_product_types_update
      summary: View, update, or delete a product type
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductTypeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProductTypeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProductTypeDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductTypeDetail'
          description: ''
    patch:
      operationId: products_admin_product_types_partial_update
      summary: View, update, or delete a product type
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductTypeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductTypeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductTypeDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductTypeDetail'
          description: ''
    delete:
      operationId: products_admin_product_types_destroy
      summary: View, update, or delete a product type
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Types
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/admin/products/:
    get:
      operationId: products_admin_products_list
      summary: List or create products
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: search
        schema:
          type: string
        description: Search products by name
      tags:
      - Admin - Product
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminProductList'
          description: ''
    post:
      operationId: products_admin_products_create
      summary: List or create products
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number for pagination
      - in: query
        name: search
        schema:
          type: string
        description: Search products by name
      tags:
      - Admin - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProduct'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProduct'
          description: ''
  /products/admin/products/{id}/media/:
    get:
      operationId: products_admin_products_media_list
      summary: List or create product media
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Admin - Product Media
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminProductMediaList'
          description: ''
    post:
      operationId: products_admin_products_media_create
      summary: List or create product media
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Media
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductMedia'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProductMedia'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProductMedia'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductMedia'
          description: ''
  /products/admin/products/{id}/:
    get:
      operationId: products_admin_products_retrieve
      summary: View, update, or delete a specific product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductDetail'
          description: ''
    put:
      operationId: products_admin_products_update
      summary: View, update, or delete a specific product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProductDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProductDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductDetail'
          description: ''
    patch:
      operationId: products_admin_products_partial_update
      summary: View, update, or delete a specific product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductDetail'
          description: ''
    delete:
      operationId: products_admin_products_destroy
      summary: View, update, or delete a specific product
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/admin/products/{product_id}/media/{id}/:
    get:
      operationId: products_admin_products_media_retrieve
      summary: View, update, or delete a specific product media
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Media
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductMediaDetail'
          description: ''
    put:
      operationId: products_admin_products_media_update
      summary: View, update, or delete a specific product media
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Media
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminProductMediaDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminProductMediaDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminProductMediaDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductMediaDetail'
          description: ''
    patch:
      operationId: products_admin_products_media_partial_update
      summary: View, update, or delete a specific product media
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Media
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductMediaDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductMediaDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminProductMediaDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminProductMediaDetail'
          description: ''
    delete:
      operationId: products_admin_products_media_destroy
      summary: View, update, or delete a specific product media
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - Admin - Product Media
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /products/attributes/:
    get:
      operationId: products_attributes_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Product - Attributes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductAttributeList'
          description: ''
  /products/attributes/{attribute_id}/values/:
    get:
      operationId: products_attributes_values_list
      parameters:
      - in: path
        name: attribute_id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Product - Attributes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductAttributeValueList'
          description: ''
  /products/attributes/{attribute_id}/values/{value_id}/:
    get:
      operationId: products_attributes_values_retrieve
      parameters:
      - in: path
        name: attribute_id
        schema:
          type: integer
        required: true
      - in: path
        name: value_id
        schema:
          type: integer
        required: true
      tags:
      - Product - Attributes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAttributeValueDetail'
          description: ''
  /products/attributes/{id}/:
    get:
      operationId: products_attributes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Product - Attributes
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductAttributeDetail'
          description: ''
  /products/product-types/:
    get:
      operationId: products_product_types_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Product - Types
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductTypeList'
          description: ''
  /products/product-types/{id}/:
    get:
      operationId: products_product_types_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Product - Types
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeDetail'
          description: ''
  /products/products/:
    get:
      operationId: products_products_list
      parameters:
      - in: query
        name: brand
        schema:
          type: integer
      - in: query
        name: category
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Product - List
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
components:
  schemas:
    AdminProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        web_id:
          type: string
          title: Product Website ID
          description: Required, unique
          maxLength: 50
        slug:
          type: string
          title: Product Safe URL
          description: Required, letters, numbers, underscores, or hyphens
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          title: Product Name
          description: Required, max 255 characters
          maxLength: 255
        description:
          type: string
          title: Product Description
          description: Required
        brand:
          type: integer
        category:
          type: integer
          title: Product Category
          description: Required
        is_active:
          type: boolean
          title: Product Visibility
          description: True = Product Visible
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Product Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Product Last Updated
          description: 'Format: Y-m-d H:M:S'
      required:
      - brand
      - category
      - created_at
      - description
      - id
      - name
      - slug
      - updated_at
      - web_id
    AdminProductAttribute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Product Attribute Name
          description: Required, unique, max 255 characters
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Product Attribute Description
          description: Optional
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    AdminProductAttributeDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Product Attribute Name
          description: Required, unique, max 255 characters
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Product Attribute Description
          description: Optional
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    AdminProductAttributeValue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        attribute_value:
          type: string
          description: Required, max 255 characters
          maxLength: 255
      required:
      - attribute_value
      - id
    AdminProductAttributeValueDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        attribute_value:
          type: string
          description: Required, max 255 characters
          maxLength: 255
        product_attribute:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - attribute_value
      - created_at
      - id
      - product_attribute
      - updated_at
    AdminProductDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        web_id:
          type: string
          title: Product Website ID
          description: Required, unique
          maxLength: 50
        slug:
          type: string
          title: Product Safe URL
          description: Required, letters, numbers, underscores, or hyphens
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          title: Product Name
          description: Required, max 255 characters
          maxLength: 255
        description:
          type: string
          title: Product Description
          description: Required
        brand:
          type: integer
        category:
          type: integer
          title: Product Category
          description: Required
        is_active:
          type: boolean
          title: Product Visibility
          description: True = Product Visible
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Product Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Product Last Updated
          description: 'Format: Y-m-d H:M:S'
      required:
      - brand
      - category
      - created_at
      - description
      - id
      - name
      - slug
      - updated_at
      - web_id
    AdminProductInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sku:
          type: string
          title: Stock Keeping Unit (SKU)
          description: Required, unique, max 20 characters
          maxLength: 20
        upc:
          type: string
          title: Universal Product Code (UPC)
          description: Required, unique, max 12 characters
          maxLength: 12
        product:
          type: integer
        product_type:
          type: integer
        attribute_values:
          type: array
          items:
            type: integer
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
          title: Product Visibility
          description: True = Product Visible
        retail_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        store_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        sale_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Sub-Product Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Sub-Product Updated
          description: 'Format: Y-m-d H:M:S'
      required:
      - created_at
      - id
      - product
      - product_type
      - retail_price
      - sku
      - stock
      - store_price
      - upc
      - updated_at
      - weight
    AdminProductInventoryDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sku:
          type: string
          title: Stock Keeping Unit (SKU)
          description: Required, unique, max 20 characters
          maxLength: 20
        upc:
          type: string
          title: Universal Product Code (UPC)
          description: Required, unique, max 12 characters
          maxLength: 12
        product:
          type: integer
        product_type:
          type: integer
        attribute_values:
          type: array
          items:
            type: integer
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
          title: Product Visibility
          description: True = Product Visible
        retail_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        store_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        sale_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Sub-Product Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Sub-Product Updated
          description: 'Format: Y-m-d H:M:S'
      required:
      - created_at
      - id
      - product
      - product_type
      - retail_price
      - sku
      - stock
      - store_price
      - upc
      - updated_at
      - weight
    AdminProductMedia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        image:
          type: string
          format: uri
          title: Product Image
          description: 'Required, default: ''default.png'''
        is_feature:
          type: boolean
          title: Product Default Image
          description: 'Default: False, True = Default Image'
        ordering:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Image Ordering
          description: Define the order of images
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Image Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Image Updated
          description: 'Format: Y-m-d H:M:S'
      required:
      - created_at
      - id
      - product
      - updated_at
    AdminProductMediaDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          title: Product Image
          description: 'Required, default: ''default.png'''
        is_feature:
          type: boolean
          title: Product Default Image
          description: 'Default: False, True = Default Image'
        ordering:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Image Ordering
          description: Define the order of images
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Image Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Image Updated
          description: 'Format: Y-m-d H:M:S'
      required:
      - created_at
      - id
      - product
      - updated_at
    AdminProductType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Type of Product
          description: Required, unique, max 255 characters
          maxLength: 255
        slug:
          type: string
          title: Product Type Slug
          description: Unique URL identifier for product type.
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - slug
    AdminProductTypeDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Type of Product
          description: Required, unique, max 255 characters
          maxLength: 255
        slug:
          type: string
          title: Product Type Slug
          description: Unique URL identifier for product type.
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - slug
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Category Name
          description: Required, max 100 characters
          maxLength: 100
        slug:
          type: string
          title: Category Safe URL
          description: Required, letters, numbers, underscore, or hyphens
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        is_active:
          type: boolean
          description: Designates whether this category is active.
        parent:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Category Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Category Updated
          description: 'Format: Y-m-d H:M:S'
      required:
      - created_at
      - id
      - name
      - slug
      - updated_at
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
        new_password2:
          type: string
          writeOnly: true
      required:
      - new_password
      - new_password2
      - old_password
    Disable2FA:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
      required:
      - password
    EmailTypeEnum:
      enum:
      - verification
      - reset_password
      type: string
      description: |-
        * `verification` - verification
        * `reset_password` - reset_password
    Enable2FA:
      type: object
      properties:
        method:
          allOf:
          - $ref: '#/components/schemas/MethodEnum'
          description: |-
            Choose between 'email' or 'sms' for 2FA.

            * `email` - email
            * `sms` - sms
      required:
      - method
    ForgotPassword:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    GenerateOTP:
      type: object
      properties:
        method:
          allOf:
          - $ref: '#/components/schemas/MethodEnum'
          description: |-
            Choose 'email' or 'sms' for receiving the OTP.

            * `email` - email
            * `sms` - sms
      required:
      - method
    Logout:
      type: object
      properties:
        refresh:
          type: string
          description: The refresh token to be blacklisted.
      required:
      - refresh
    Media:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          title: Product Image
          description: 'Required, default: ''default.png'''
        is_feature:
          type: boolean
          title: Product Default Image
          description: 'Default: False, True = Default Image'
        ordering:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Image Ordering
          description: Define the order of images
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Image Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Image Updated
          description: 'Format: Y-m-d H:M:S'
      required:
      - created_at
      - id
      - updated_at
    MethodEnum:
      enum:
      - email
      - sms
      type: string
      description: |-
        * `email` - email
        * `sms` - sms
    PaginatedAdminProductAttributeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminProductAttribute'
    PaginatedAdminProductAttributeValueList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminProductAttributeValue'
    PaginatedAdminProductInventoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminProductInventory'
    PaginatedAdminProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminProduct'
    PaginatedAdminProductMediaList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminProductMedia'
    PaginatedAdminProductTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminProductType'
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedMediaList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Media'
    PaginatedProductAttributeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
    PaginatedProductAttributeValueList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttributeValue'
    PaginatedProductInventoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductInventory'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedProductTypeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductType'
    PatchedAdminProductAttributeDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Product Attribute Name
          description: Required, unique, max 255 characters
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Product Attribute Description
          description: Optional
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAdminProductAttributeValueDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        attribute_value:
          type: string
          description: Required, max 255 characters
          maxLength: 255
        product_attribute:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAdminProductDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        web_id:
          type: string
          title: Product Website ID
          description: Required, unique
          maxLength: 50
        slug:
          type: string
          title: Product Safe URL
          description: Required, letters, numbers, underscores, or hyphens
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          title: Product Name
          description: Required, max 255 characters
          maxLength: 255
        description:
          type: string
          title: Product Description
          description: Required
        brand:
          type: integer
        category:
          type: integer
          title: Product Category
          description: Required
        is_active:
          type: boolean
          title: Product Visibility
          description: True = Product Visible
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Product Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Product Last Updated
          description: 'Format: Y-m-d H:M:S'
    PatchedAdminProductInventoryDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sku:
          type: string
          title: Stock Keeping Unit (SKU)
          description: Required, unique, max 20 characters
          maxLength: 20
        upc:
          type: string
          title: Universal Product Code (UPC)
          description: Required, unique, max 12 characters
          maxLength: 12
        product:
          type: integer
        product_type:
          type: integer
        attribute_values:
          type: array
          items:
            type: integer
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
          title: Product Visibility
          description: True = Product Visible
        retail_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        store_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        sale_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Sub-Product Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Sub-Product Updated
          description: 'Format: Y-m-d H:M:S'
    PatchedAdminProductMediaDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          title: Product Image
          description: 'Required, default: ''default.png'''
        is_feature:
          type: boolean
          title: Product Default Image
          description: 'Default: False, True = Default Image'
        ordering:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Image Ordering
          description: Define the order of images
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Image Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Image Updated
          description: 'Format: Y-m-d H:M:S'
    PatchedAdminProductTypeDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Type of Product
          description: Required, unique, max 255 characters
          maxLength: 255
        slug:
          type: string
          title: Product Type Slug
          description: Unique URL identifier for product type.
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Category Name
          description: Required, max 100 characters
          maxLength: 100
        slug:
          type: string
          title: Category Safe URL
          description: Required, letters, numbers, underscore, or hyphens
          maxLength: 150
          pattern: ^[-a-zA-Z0-9_]+$
        is_active:
          type: boolean
          description: Designates whether this category is active.
        parent:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Category Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Category Updated
          description: 'Format: Y-m-d H:M:S'
    PatchedUpdateProfile:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        web_id:
          type: string
          title: Product Website ID
          description: Required, unique
          maxLength: 50
        slug:
          type: string
          title: Product Safe URL
          description: Required, letters, numbers, underscores, or hyphens
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          title: Product Name
          description: Required, max 255 characters
          maxLength: 255
        description:
          type: string
          title: Product Description
          description: Required
        brand:
          type: integer
        category:
          type: integer
          title: Product Category
          description: Required
        is_active:
          type: boolean
          title: Product Visibility
          description: True = Product Visible
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Product Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Product Last Updated
          description: 'Format: Y-m-d H:M:S'
      required:
      - brand
      - category
      - created_at
      - description
      - id
      - name
      - slug
      - updated_at
      - web_id
    ProductAttribute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Product Attribute Name
          description: Required, unique, max 255 characters
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Product Attribute Description
          description: Optional
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    ProductAttributeDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Product Attribute Name
          description: Required, unique, max 255 characters
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Product Attribute Description
          description: Optional
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    ProductAttributeValue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        attribute_value:
          type: string
          description: Required, max 255 characters
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - attribute_value
      - created_at
      - id
      - updated_at
    ProductAttributeValueDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        attribute_value:
          type: string
          description: Required, max 255 characters
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - attribute_value
      - created_at
      - id
      - updated_at
    ProductDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        web_id:
          type: string
          title: Product Website ID
          description: Required, unique
          maxLength: 50
        slug:
          type: string
          title: Product Safe URL
          description: Required, letters, numbers, underscores, or hyphens
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        name:
          type: string
          title: Product Name
          description: Required, max 255 characters
          maxLength: 255
        description:
          type: string
          title: Product Description
          description: Required
        brand:
          type: integer
        brand_name:
          type: string
          readOnly: true
        category:
          type: integer
          title: Product Category
          description: Required
        category_name:
          type: string
          readOnly: true
        is_active:
          type: boolean
          title: Product Visibility
          description: True = Product Visible
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Product Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Product Last Updated
          description: 'Format: Y-m-d H:M:S'
      required:
      - brand
      - brand_name
      - category
      - category_name
      - created_at
      - description
      - id
      - name
      - slug
      - updated_at
      - web_id
    ProductInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sku:
          type: string
          title: Stock Keeping Unit (SKU)
          description: Required, unique, max 20 characters
          maxLength: 20
        upc:
          type: string
          title: Universal Product Code (UPC)
          description: Required, unique, max 12 characters
          maxLength: 12
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        retail_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        store_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        sale_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_active:
          type: boolean
          title: Product Visibility
          description: True = Product Visible
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Sub-Product Created
          description: 'Format: Y-m-d H:M:S'
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Date Sub-Product Updated
          description: 'Format: Y-m-d H:M:S'
      required:
      - created_at
      - id
      - retail_price
      - sku
      - stock
      - store_price
      - upc
      - updated_at
      - weight
    ProductType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Type of Product
          description: Required, unique, max 255 characters
          maxLength: 255
        slug:
          type: string
          title: Product Type Slug
          description: Unique URL identifier for product type.
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - slug
    ProductTypeDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Type of Product
          description: Required, unique, max 255 characters
          maxLength: 255
        slug:
          type: string
          title: Product Type Slug
          description: Unique URL identifier for product type.
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - id
      - name
      - slug
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - password
      - password2
      - username
    ResendEmail:
      type: object
      properties:
        email:
          type: string
          format: email
        email_type:
          $ref: '#/components/schemas/EmailTypeEnum'
      required:
      - email
      - email_type
    ResetPassword:
      type: object
      properties:
        new_password:
          type: string
          writeOnly: true
        new_password2:
          type: string
          writeOnly: true
      required:
      - new_password
      - new_password2
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UpdateProfile:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - username
    VerifyOTP:
      type: object
      properties:
        otp:
          type: string
          description: Enter the 6-digit OTP you received.
          maxLength: 6
      required:
      - otp
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: Auth - Registration
  description: Endpoints related to user registration and email verification.
- name: Auth - Token
  description: Endpoints related to obtaining, refreshing, and verifying JWT tokens.
- name: Auth - Logout
  description: Endpoints for user logout operations.
- name: Auth - Password
  description: Endpoints for managing user passwords, including reset and change.
- name: Auth - Profile
  description: Endpoints for fetching and updating user profile information.
- name: Auth - OTP
  description: Endpoints for managing two-factor authentication (2FA), including OTP
    generation and verification.
- name: Auth - Session
  description: Endpoints for managing user sessions, including session listing, deletion,
    and logout of all sessions.
- name: Product - List
  description: Endpoints for listing products and retrieving product details.
- name: Product - Media
  description: Endpoints for managing product media, such as images and videos.
- name: Product - Inventory
  description: Endpoints for managing product inventory information.
- name: Product - Types
  description: Endpoints for managing product types and their details.
- name: Product - Attributes
  description: Endpoints for managing product attributes and their values.
- name: Admin - Product
  description: Admin endpoints for managing products and their details.
- name: Admin - Product Media
  description: Admin endpoints for managing product media such as images and videos.
- name: Admin - Product Inventory
  description: Admin endpoints for managing product inventory.
- name: Admin - Product Types
  description: Admin endpoints for managing product types.
- name: Admin - Product Attributes
  description: Admin endpoints for managing product attributes and their values.
- name: Category - List
  description: Endpoints for listing all active categories accessible to users.
- name: Category - Detail
  description: Endpoint for retrieving the details of a single active category by
    pk.
- name: Admin - Category
  description: Admin endpoints for managing categories, including listing, creating,
    updating, and deleting categories.
