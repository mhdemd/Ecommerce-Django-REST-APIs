# Generated by Django 4.2.4 on 2023-12-10 13:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required, unique, max 255 characters', max_length=255, unique=True, verbose_name='Brand Name')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required, max 100 characters', max_length=100, unique=True, verbose_name='Category Name')),
                ('slug', models.SlugField(help_text='Required, letters, numbers, underscore, or hyphens', max_length=150, verbose_name='Category Safe URL')),
                ('is_active', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, help_text='Not required', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='shop.category', verbose_name='Parent of Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('web_id', models.CharField(blank=True, help_text='Required, unique', max_length=50, null=True, verbose_name='Product Website ID')),
                ('slug', models.SlugField(help_text='Required, letters, numbers, underscores, or hyphens', max_length=255, verbose_name='Product Safe URL')),
                ('name', models.CharField(help_text='Required, max 255 characters', max_length=255, verbose_name='Product Name')),
                ('description', models.TextField(help_text='Required', verbose_name='Product Description')),
                ('is_active', models.BooleanField(default=True, help_text='True = Product Visible', verbose_name='Product Visibility')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Format: Y-m-d H:M:S', verbose_name='Date Product Created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Format: Y-m-d H:M:S', verbose_name='Date Product Last Updated')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brand', to='shop.brand')),
                ('category', models.ForeignKey(help_text='Required', on_delete=django.db.models.deletion.CASCADE, related_name='product', to='shop.category', verbose_name='Product Category')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required, unique, max 255 characters', max_length=255, unique=True, verbose_name='Product Attribute Name')),
                ('description', models.TextField(help_text='Required', verbose_name='Product Attribute Description')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value', models.CharField(help_text='Required, max 255 characters', max_length=255, verbose_name='Attribute Value')),
                ('product_attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attribute', to='shop.productattribute')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required, unique, max 255 characters', max_length=255, unique=True, verbose_name='Type of Product')),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'product')},
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=None)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('show_name', models.BooleanField(default=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='shop.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Product Reviews',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ProductInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(blank=True, help_text='Required, unique, max 20 characters', max_length=20, null=True, verbose_name='Stock Keeping Unit (SKU)')),
                ('upc', models.CharField(blank=True, help_text='Required, unique, max 12 characters', max_length=12, null=True, verbose_name='Universal Product Code (UPC)')),
                ('stock', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True, help_text='True = Product Visible', verbose_name='Product Visibility')),
                ('retail_price', models.DecimalField(decimal_places=2, error_messages={'name': {'max_length': 'The price must be between 0 and 999.99.'}}, help_text='Maximum price 999.99', max_digits=5, verbose_name='Recommended Retail Price')),
                ('store_price', models.DecimalField(decimal_places=2, error_messages={'name': {'max_length': 'The price must be between 0 and 999.99.'}}, help_text='Maximum price 999.99', max_digits=5, verbose_name='Regular Store Price')),
                ('sale_price', models.DecimalField(decimal_places=2, error_messages={'name': {'max_length': 'The price must be between 0 and 999.99.'}}, help_text='Maximum price 999.99', max_digits=5, verbose_name='Sale Price')),
                ('weight', models.FloatField(verbose_name='Product Weight')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Format: Y-m-d H:M:S', verbose_name='Date Sub-Product Created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Format: Y-m-d H:M:S', verbose_name='Date Sub-Product Updated')),
                ('attribute_values', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_inventories', to='shop.productattributevalue')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_inventory', to='shop.product')),
                ('product_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_type', to='shop.producttype')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='users_wishlist',
            field=models.ManyToManyField(blank=True, related_name='user_wishlist', through='shop.Wishlist', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(default='images/default.png', help_text="Required, default: 'default.png'", upload_to='images/', verbose_name='Product Image')),
                ('is_feature', models.BooleanField(default=False, help_text='Default: False, True = Default Image', verbose_name='Product Default Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Format: Y-m-d H:M:S', verbose_name='Product Visibility')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Format: Y-m-d H:M:S', verbose_name='Date Sub-Product Created')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['id', 'slug'], name='shop_produc_id_f21274_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='shop_produc_name_a2070e_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['-created_at'], name='shop_produc_created_ddfb00_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name'], name='shop_catego_name_289c7e_idx'),
        ),
    ]
